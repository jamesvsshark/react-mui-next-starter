// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main app should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    classes={Object {}}
    sample={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Typography)
          gutterBottom={true}
          variant="display1"
>
          React-Redux-MUI-Starter
</WithStyles(Typography)>,
        <WithStyles(Typography)
          gutterBottom={true}
          variant="subheading"
>
          Happy coding
</WithStyles(Typography)>,
        <br />,
        <WithStyles(Dialog)
          onClose={[Function]}
          open={undefined}
>
          <WithStyles(DialogTitle)>
                    Super Secret Password
          </WithStyles(DialogTitle)>
          <WithStyles(DialogContent)>
                    <WithStyles(DialogContentText)>
                              1-2-3-4-5
                    </WithStyles(DialogContentText)>
          </WithStyles(DialogContent)>
          <WithStyles(DialogActions)>
                    <WithStyles(Button)
                              color="primary"
                              onClick={[Function]}
                              variant="outlined"
                    >
                              OK
                    </WithStyles(Button)>
          </WithStyles(DialogActions)>
</WithStyles(Dialog)>,
        <WithStyles(Button)
          color="primary"
          onClick={[Function]}
          size="large"
          variant="outlined"
>
          Super Secret Password
</WithStyles(Button)>,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "React-Redux-MUI-Starter",
          "gutterBottom": true,
          "variant": "display1",
        },
        "ref": null,
        "rendered": "React-Redux-MUI-Starter",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Happy coding",
          "gutterBottom": true,
          "variant": "subheading",
        },
        "ref": null,
        "rendered": "Happy coding",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(DialogTitle)>
              Super Secret Password
</WithStyles(DialogTitle)>,
            <WithStyles(DialogContent)>
              <WithStyles(DialogContentText)>
                            1-2-3-4-5
              </WithStyles(DialogContentText)>
</WithStyles(DialogContent)>,
            <WithStyles(DialogActions)>
              <WithStyles(Button)
                            color="primary"
                            onClick={[Function]}
                            variant="outlined"
              >
                            OK
              </WithStyles(Button)>
</WithStyles(DialogActions)>,
          ],
          "onClose": [Function],
          "open": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Super Secret Password",
            },
            "ref": null,
            "rendered": "Super Secret Password",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(DialogContentText)>
                1-2-3-4-5
</WithStyles(DialogContentText)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "1-2-3-4-5",
              },
              "ref": null,
              "rendered": "1-2-3-4-5",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Button)
                color="primary"
                onClick={[Function]}
                variant="outlined"
>
                OK
</WithStyles(Button)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "OK",
                "color": "primary",
                "onClick": [Function],
                "variant": "outlined",
              },
              "ref": null,
              "rendered": "OK",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Super Secret Password",
          "color": "primary",
          "onClick": [Function],
          "size": "large",
          "variant": "outlined",
        },
        "ref": null,
        "rendered": "Super Secret Password",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            gutterBottom={true}
            variant="display1"
>
            React-Redux-MUI-Starter
</WithStyles(Typography)>,
          <WithStyles(Typography)
            gutterBottom={true}
            variant="subheading"
>
            Happy coding
</WithStyles(Typography)>,
          <br />,
          <WithStyles(Dialog)
            onClose={[Function]}
            open={undefined}
>
            <WithStyles(DialogTitle)>
                        Super Secret Password
            </WithStyles(DialogTitle)>
            <WithStyles(DialogContent)>
                        <WithStyles(DialogContentText)>
                                    1-2-3-4-5
                        </WithStyles(DialogContentText)>
            </WithStyles(DialogContent)>
            <WithStyles(DialogActions)>
                        <WithStyles(Button)
                                    color="primary"
                                    onClick={[Function]}
                                    variant="outlined"
                        >
                                    OK
                        </WithStyles(Button)>
            </WithStyles(DialogActions)>
</WithStyles(Dialog)>,
          <WithStyles(Button)
            color="primary"
            onClick={[Function]}
            size="large"
            variant="outlined"
>
            Super Secret Password
</WithStyles(Button)>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "React-Redux-MUI-Starter",
            "gutterBottom": true,
            "variant": "display1",
          },
          "ref": null,
          "rendered": "React-Redux-MUI-Starter",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Happy coding",
            "gutterBottom": true,
            "variant": "subheading",
          },
          "ref": null,
          "rendered": "Happy coding",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(DialogTitle)>
                Super Secret Password
</WithStyles(DialogTitle)>,
              <WithStyles(DialogContent)>
                <WithStyles(DialogContentText)>
                                1-2-3-4-5
                </WithStyles(DialogContentText)>
</WithStyles(DialogContent)>,
              <WithStyles(DialogActions)>
                <WithStyles(Button)
                                color="primary"
                                onClick={[Function]}
                                variant="outlined"
                >
                                OK
                </WithStyles(Button)>
</WithStyles(DialogActions)>,
            ],
            "onClose": [Function],
            "open": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Super Secret Password",
              },
              "ref": null,
              "rendered": "Super Secret Password",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(DialogContentText)>
                  1-2-3-4-5
</WithStyles(DialogContentText)>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "1-2-3-4-5",
                },
                "ref": null,
                "rendered": "1-2-3-4-5",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(Button)
                  color="primary"
                  onClick={[Function]}
                  variant="outlined"
>
                  OK
</WithStyles(Button)>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "OK",
                  "color": "primary",
                  "onClick": [Function],
                  "variant": "outlined",
                },
                "ref": null,
                "rendered": "OK",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Super Secret Password",
            "color": "primary",
            "onClick": [Function],
            "size": "large",
            "variant": "outlined",
          },
          "ref": null,
          "rendered": "Super Secret Password",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
